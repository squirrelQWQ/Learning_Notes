import matplotlib.pyplot as plt

epochs = list(range(1, 21))  # 轮次

# 每一轮的准确率、召回率和 F1 分数数据
accuracy = [84.86, 87.38, 87.84, 88.02, 91.17, 90.77, 91.82, 90.94, 90.77, 91.00, 92.05, 92.52, 92.46, 91.47, 91.12, 92.52, 91.35, 92.64, 92.99, 92.93]  # 替换为实际数据
recall = [84.60, 94.69, 95.11, 86.68, 93.76, 95.94, 93.24, 95.21, 92.30, 90.63, 97.09, 93.86, 95.32, 92.20, 91.36, 92.20, 89.70, 94.59, 93.86, 93.86]  # 替换为实际数据
f1_score = [86.26, 89.39, 89.78, 89.04, 92.27, 92.11, 92.75, 92.19, 91.82, 91.88, 93.21, 93.57, 92.62, 92.62, 92.03, 93.26, 92.09, 93.56, 93.81, 93.71]  # 替换为实际数据


# 指定中文字体
plt.rcParams['font.sans-serif'] = ['SimHei']

# 绘制折线图
plt.figure(figsize=(10, 6))

plt.plot(epochs, accuracy, marker='o', label='Accuracy')
plt.plot(epochs, recall, marker='o', label='Recall')
plt.plot(epochs, f1_score, marker='o', label='F1 Score')

plt.title('模型在测试集上的表现')
plt.xlabel('训练轮次')
plt.ylabel('数值')
plt.xticks(epochs)
plt.grid(True)
plt.legend()
plt.tight_layout()

plt.savefig('2024-4-26-resnet101_result.png')
plt.show()







# 训练损失值数据
train_losses = [0.5489810879176883, 0.34475404662994025, 0.2888142886423619, 0.2573434409835576, 0.2413373738005061,
                0.2240893361332748, 0.20753428912460456, 0.19152660033269567, 0.1780715019966554, 0.175730897942732,
                0.16870486590996053, 0.15883681902152738, 0.1484707802970389, 0.14608089648792086, 0.13872767175019013,
                0.1277843911688183, 0.12808835100835173, 0.12256466079297668, 0.11607362390663116, 0.11344290969411355]

# 测试损失值数据
test_losses = [0.35172392532368685, 0.3189354336289602, 0.2781456956448399, 0.2673850980038955, 0.21177440122744748,
               0.23489635187053234, 0.20911823220063594, 0.21609541690238168, 0.21946413647905688, 0.20540972370828423,
               0.1976726829100435, 0.18516586510307878, 0.19675456103215985, 0.2096853485226492, 0.21616401464164814,
               0.18350226979563447, 0.25002851349379973, 0.1973270821976954, 0.1821339140585232, 0.19713723676270484]

# 轮次
epochs = list(range(1, 21))

# 绘制折线图
plt.plot(epochs, train_losses, marker='o', linestyle='-', label='Train Loss')
plt.plot(epochs, test_losses, marker='o', linestyle='-', label='Test Loss')

# 添加标题和标签
plt.title('训练和测试损失值')
plt.xlabel('训练轮次')
plt.ylabel('损失值')

# 设置 x 轴刻度
plt.xticks(epochs)

# 显示网格
plt.grid(True)

# 显示图例
plt.legend()

plt.savefig('2024-4-26-resnet101_loss_result.png')
# 显示图形
plt.show()


